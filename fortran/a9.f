C&&& A9
C  TEST ALGORITHM 9  A9GJ
C  J.C. NASH   JULY 1978, APRIL 1989
C  USE FRANK MATRIX
      LOGICAL INDEF
      INTEGER N,N2,I,J,IJ,NOUT
      REAL A(55),X(10),S,T
      N2=55
C  PRINTER CHANNEL
      NOUT=6
C  MAIN LOOP
      DO 100 N=2,10,2
      WRITE(NOUT,950)N
 950  FORMAT('0ORDER=',I4,'  ORIGINAL MATRIX')
C  PUT IN CARDS FROM A78
C     NOTE DIFFERENCES ONLY IN CALLS
        DO 20 I=1,N
          DO 10 J=1,I
            IJ=I*(I-1)/2+J
            A(IJ)=J
  10      CONTINUE
  20    CONTINUE
       CALL SOUT(A,N2,N,NOUT)
       CALL A9GJ(A,N2,N,INDEF,X)
       WRITE(NOUT,956)
 956   FORMAT('0INVERSE')
       CALL SOUT(A,N2,N,NOUT)
       WRITE(NOUT,957)
 957   FORMAT('0INVERSE OF INVERSE')
       CALL A9GJ(A,N2,N,INDEF,X)
       CALL SOUT(A,N2,N,NOUT)
C   COMPUTE DEVIATION FROM ORIGINAL MATRIX
        S=0.0
        DO 50 I=1,N
          DO 40 J=1,I
          IJ=I*(I-1)/2+J
          T=ABS(J-A(IJ))
          IF(T.GT.S)S=T
  40     CONTINUE
  50   CONTINUE
       WRITE(NOUT,958)S
 958   FORMAT('0MAX. DEVN. OF INVERSE-INVERSE FROM ORIGINAL=',1PE16.8)
 100  CONTINUE
      STOP
      END
      SUBROUTINE SOUT(A,N2,N,NOUT)
C  J.C. NASH   JULY 1978, APRIL 1989
      INTEGER N2,N,NOUT,I,J,IJ,JJ
      REAL A(N2)
C     PRINTS SYMMETRIC MATRIX STORED ROW-WISE AS A VECTOR
      DO 20 I=1,N
        WRITE(NOUT,951)I
 951    FORMAT(' ROW',I3)
        IJ=I*(I-1)/2+1
        JJ=IJ+I-1
        WRITE(NOUT,952)(A(J),J=IJ,JJ)
 952    FORMAT(1H ,1P5E16.8)
 20   CONTINUE
      RETURN
      END
      SUBROUTINE A9GJ(A,N2,N,INDEF,X)
C  ALGORITHM 9
C  J.C. NASH   JULY 1978, FEBRUARY 1980, APRIL 1989
C  BAUER-REINSCH  GAUSS-JORDAN INVERSION OF A SYMMETRIC, POSITIVE
C  A=MATRIX - STORED AS A VECTOR -- ELEMENT I,J IN POSITION I*(I-1)/2+J
C  N2=LENGTH OF VECTOR A = N*(N+1)/2
C  N=ORDER OF MATRIX
C  INDEF=LOGICAL FLAG SET .TRUE. IF MATRIX NOT COMPUTATIONALLY
C     POSITIVE DEFINITE
C  X=WORKING VECTOR OF LENGTH AT LEAST N
C  DEFINITE MATRIX
C  STEP 0
      LOGICAL INDEF
      INTEGER N2,N,K,KK,Q,M,Q2,JI,JQ
      REAL A(N2),S,T,X(N)
C  STEP 1
      INDEF=.FALSE.
      DO 100 KK=1,N
        K=N+1-KK
C  STEP 2
        S=A(1)
C  STEP 3
        IF(S.LE.0.0)INDEF=.TRUE.
        IF(INDEF)RETURN
C  STEP 4
        M=1
C  STEP 5
        DO 60 I=2,N
C  STEP 6
          Q=M
          M=M+I
          T=A(Q+1)
          X(I)=-T/S
C  STEP 7
          Q2=Q+2
          IF(I.GT.K)X(I)=-X(I)
C  STEP 8
          DO 40 J=Q2,M
            JI=J-I
            JQ=J-Q
            A(JI)=A(J)+T*X(JQ)
  40      CONTINUE
C  STEP 9
  60    CONTINUE
C  STEP 10
        Q=Q-1
        A(M)=1/S
C  STEP 11
        DO 80 I=2,N
          JI=Q+I
          A(JI)=X(I)
  80    CONTINUE
C  STEP 12
 100  CONTINUE
      RETURN
      END

