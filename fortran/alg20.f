      SUBROUTINE A20AS(N,B,FUN,P0,P,E,COUNT,IPR)
C  ALGORITHM 20  AXIAL SEARCH
C  J.C. NASH   JULY 1978, FEBRUARY 1980, APRIL 1989
C  N = ORDER OF PROBLEM = NO. OF PARAMETERS TO BE VARIED
C  B = SUPPOSED MINIMUM
C  FUN = NAME OF FUNCTION ROUTINE =   P=FUN(N,B,NOCOM)
C    WHERE NOCOM SET .TRUE. IF POINT IS INFEASIBLE
C  P0  = SUPPOSED MINIMAL FN VALUE
C  P   =  OUTPUT FUNCTION VALUE.  P.LT.P0 IF SEARCH SUCCESSFUL
C      IN SUCH A CASE  P=FUN(N,B,NOCOM)  I.E. B IS LEFT ALTERED
C  E   = NUMBER.GT.0.0 USED TO COMPUTE INCREMENT AT STEP 3
C  COUNT = NUMBER OF EVALUATIONS MADE (OUTPUT ONLY)
C  IPR =  PRINT CHANNEL.  NO PRINTING UNLESS IPR.GT.0
C  STEP 0
      LOGICAL NOCOM
      INTEGER COUNT,N,IPR,I
      REAL B(N),P0,P,T,S,E,BIG
C  IBM VALUE FOR BIG - A LARGE NUMBER USED TO GIVE A VALUE TO P
C     WHEN POINT IS NOT FEASIBLE
C&&&       BIG=R1MACH(2)
      BIG=1.0E+35
      IF(IPR.GT.0)WRITE(IPR,950)P0
 950  FORMAT(34H0AXIAL SEARCH - SUPPOSED MINIMUM =,1PE16.8,3H AT)
      IF(IPR.GT.0)WRITE(IPR,951)(I,B(I),I=1,N)
 951  FORMAT( 3H B(,I3,2H)=,1PE16.8)
      COUNT=0
C  SAFETY CHECK
      IF(E.LE.0.0)STOP
C  STEP 1
      DO 90 I=1,N
C  STEP 2
        T=B(I)
C  STEP 3
        S=E*(ABS(T)+E)
C  STEP 4
        B(I)=T+S
        NOCOM=.FALSE.
        P=FUN(N,B,NOCOM)
        COUNT=COUNT+1
        IF(NOCOM)P=BIG
        IF(IPR.GT.0)WRITE(IPR,952)I,B(I),P
 952    FORMAT( 3H B(,I3,2H)=,1PE16.8,10H FN VALUE=,E16.8)
C  STEP 5
        IF(P.LT.P0)RETURN
C  STEP 6
        B(I)=T-S
        NOCOM=.FALSE.
        P=FUN(N,B,NOCOM)
        COUNT=COUNT+1
        IF(NOCOM)P=BIG
C  STEP 7
      IF(IPR.GT.0)WRITE(IPR,952)I,B(I),P
        IF(P.LT.P0)RETURN
C  STEP 8
        B(I)=T
C  STEP 9
  90  CONTINUE
      RETURN
      END
