C&&& A14-15
C  TEST ALG. 14 USING MOLER MATRIX
C  J.C. NASH   JULY 1978, APRIL 1989
      INTEGER N,ND,I,NOUT,NIN,ISWP
      REAL A(20,20),B(20,20),AT(20,20),Z(20),V(20,20),RMAX,VMAX
      EXTERNAL FRANKM,UNITM
      ND=20
C  I/O CHANNELS
      NIN=5
      NOUT=6
   1  READ(NIN,900)N
 900  FORMAT(I4)
      WRITE(NOUT,901)N
 901  FORMAT(' ORDER N=',I4)
      IF(N.LE.0)STOP
      ISWP=30
      CALL MOLERM(N,N,A,ND)
      CALL A14JE(N,A,ND,V,ND,ISWP,NOUT,.TRUE.,.TRUE.)
      DO 20 I=1,N
        Z(I)=A(I,I)
  20  CONTINUE
      CALL EVT(N,V,ND,Z,MOLERM,UNITM,AT,ND,B,ND,NOUT,RMAX,VMAX)
      GOTO 1
      END
      SUBROUTINE A14JE(N,A,NA,V,NV,ISWP,IPR,SETV,COMV)
C  ALGORITHM 14  JACOBI EIGENVALUES AND EIGENVECTORS OF REAL SYMMETRIC
C     MATRIX
C  J.C. NASH   JULY 1978, FEBRUARY 1980, APRIL 1989
C  N     = ORDER OF PROBLEM
C  A     = ARRAY CONTAINING MATRIX  -- MUST BE SYMMETRIC
C  NA    = FIRST DIMENSION OF A
C  V     = ARRAY INTO WHICH VECTORS COMPUTED
C  NV    = FIRST DIMENSION OF V
C  ISWP  =  SWEEP LIMIT (INPUT). SWEEP COUNT (OUTPUT)
C  IPR   = PRINT CHANNEL.  PRINTING ONLY IF IPR.GT.0
C  SETV  = LOGICAL SWITCH TO SET V INITIALLY TO IDENTITY OF ORDER N.
C  COMV  = LOGICAL SWITCH. IF .TRUE. THEN VECTORS TO BE CALCULATED.
C  STEP 0
      LOGICAL SETV,COMV
      INTEGER N,NA,NV,IPR,ISWP,LISWP,M,I,J,K,N1,I1
      REAL A(NA,N),V(NV,N),P,Q,T,S,C,FACT
C  FACTOR USED IN TEST AT STEP 7
      FACT=100.0
      N1=N-1
      LISWP=ISWP
      ISWP=0
C   EIGENVALUES LEFT IN DIAGONAL ELEMENTS OF A.
      IF(.NOT.COMV)GOTO 10
      IF(.NOT.SETV)GOTO 10
      DO 5 I=1,N
        DO 3 J=1,N
          V(I,J)=0.0
   3    CONTINUE
        V(I,I)=1.0
   5  CONTINUE
C  STEP 1
  10  ISWP=ISWP+1
      IF(ISWP.GT.LISWP)RETURN
      M=0
C  STEP 2
      IF(N.EQ.1)RETURN
      DO 160 I=1,N1
C  STEP 3
      I1=I+1
        DO 150 J=I1,N
C  STEP 4
          P=0.5*(A(I,J)+A(J,I))
          Q=A(I,I)-A(J,J)
          T=SQRT(4.0*P*P+Q*Q)
C  STEP 5
          IF(T.EQ.0.0)GOTO 110
C  STEP 6
          IF(Q.LT.0.0)GOTO 90
C  STEP 7
          IF(ABS(A(I,I)).LT.ABS(A(I,I))+FACT*ABS(P))GOTO 80
          IF(ABS(A(J,J)).EQ.ABS(A(J,J))+FACT*ABS(P))GOTO 110
C  STEP 8
  80      C=SQRT((T+Q)/(2.0*T))
          S=P/(T*C)
          GOTO 100
C  STEP 9
  90      S=SQRT((T-Q)/(2.0*T))
          IF(P.LT.0.0)S=-S
          C=P/(T*S)
C  STEP 10
 100      IF(1.0.LT.1.0+ABS(S))GOTO 120
C  STEP 11
 110      M=M+1
          GOTO 150
C  STEP 12
 120      DO 125 K=1,N
            Q=A(I,K)
            A(I,K)=C*Q+S*A(J,K)
            A(J,K)=-S*Q+C*A(J,K)
 125      CONTINUE
C  STEP 13
          DO 135 K=1,N
            Q=A(K,I)
            A(K,I)=C*Q+S*A(K,J)
            A(K,J)=-S*Q+C*A(K,J)
 135      CONTINUE
          IF(.NOT.COMV)GOTO 150
C  STEP 14
          DO 145 K=1,N
            Q=V(K,I)
            V(K,I)=C*Q+S*V(K,J)
            V(K,J)=-S*Q+C*V(K,J)
 145      CONTINUE
C  STEP 15
 150    CONTINUE
C  STEP 16
 160  CONTINUE
C  STEP 17
      IF(IPR.GT.0)WRITE(IPR,970)ISWP,M
 970  FORMAT( 9H AT SWEEP,I4,2X,I4,18H ROTATIONS SKIPPED)
      IF(M.LT.N*(N-1)/2)GOTO 10
      RETURN
      END
      SUBROUTINE UNITM(M,N,A,NA)
C  PUTS UNIT MATRIX M BY N IN A
C  J.C. NASH   JULY 1978, APRIL 1989
      INTEGER M,N,NA,I,J
      REAL A(NA,N)
      DO 10 I=1,M
        DO 5 J=1,N
          A(I,J)=0.0
          IF(I.EQ.J)A(I,I)=1.0
   5    CONTINUE
  10  CONTINUE
      RETURN
      END
      SUBROUTINE EVT(N,V,NV,Z,AIN,BIN,A,NA,B,NB,NOUT,RMAX,VMAX)
C  J.C. NASH   JULY 1978, APRIL 1989
C  COMPUTES RESIDUALS AND INNER PRODUCTS
C    R  =  (A - Z(J)*B)*V(.,J)
C  AIN AND BIN ARE NAMES OF MATRIX CALCULATING ROUTINES FOR A AND B
C  WHOSE FIRST DIMENSIONS ARE NA AND NB RESP.
C  RMAX AND VMAX ARE MAX ABS RESIDUAL AND INNER PRODUCT RESP.
C
      INTEGER N,NV,NA,NB,NOUT,I,J,K,RPOSI,RPOSJ,VPOSI,VPOSJ,I1,N1
      REAL V(NV,N),A(NA,N),B(NB,N),Z(N),RMAX,VMAX
      DOUBLE PRECISION ACC,TACC,DABS,DBLE
      CALL AIN(N,N,A,NA)
      CALL BIN(N,N,B,NB)
      N1=N-1
      TACC=0.0
      RPOSI=1
      RPOSJ=1
      DO 20 I=1,N
        DO 15 J=1,N
          ACC=0.0
          DO 10 K=1,N
            ACC=ACC+DBLE(V(K,J))*(A(I,K)-Z(J)*B(I,K))
  10      CONTINUE
          IF(DABS(ACC).LE.TACC)GOTO 15
          TACC=DABS(ACC)
          RPOSI=I
          RPOSJ=J
  15    CONTINUE
  20  CONTINUE
      RMAX=TACC
      IF(NOUT.GT.0)WRITE(NOUT,951)RMAX,RPOSI,RPOSJ
 951  FORMAT(' MAX. ABS. RESIDUAL=',1PE16.8,'  POSN',2I4)
      VPOSI=0
      VPOSJ=0
      TACC=0.0
      IF(N.EQ.1)GOTO 45
      DO 40 I=1,N1
        I1=I+1
        DO 35 J=I1,N
          ACC=0.0
          DO 30 K=1,N
            ACC=ACC+DBLE(V(K,I))*V(K,J)
  30      CONTINUE
          IF(DABS(ACC).LE.TACC)GOTO 35
          TACC=DABS(ACC)
          VPOSI=I
          VPOSJ=J
  35    CONTINUE
  40  CONTINUE
      VMAX=TACC
      IF(NOUT.GT.0)WRITE(NOUT,952)VMAX,VPOSI,VPOSJ
 952  FORMAT(' MAX. ABS. INNER PRODUCT=',1PE16.8,'  POSN',2I4)
  45  IF(NOUT.LE.0)RETURN
      DO 50 J=1,N
        WRITE(NOUT,953)J,Z(J)
 953  FORMAT(' EIGENVALUE',I3,'=',1PE16.8)
        WRITE(NOUT,954)(V(K,J),K=1,N)
 954  FORMAT(1H ,5E16.8)
  50  CONTINUE
      RETURN
      END
      SUBROUTINE MOLERM(M,N,A,NA)
C  J.C. NASH   JULY 1978, APRIL 1989
      INTEGER M,N,NA,I,J
C  INPUTS MOLER MATRIX M BY N INTO A
      REAL A(NA,N)
      DO 20 I=1,M
        DO 10 J=1,N
          A(I,J)=AMIN0(I,J)-2.0
  10    CONTINUE
        A(I,I)=I
  20  CONTINUE
      RETURN
      END

