C&&& A17
C  TEST ALG 17  A17LS USING FORSYTHE,MALCOLM + MOLER EXAMPLE
C  J.C. NASH   JULY 1978, APRIL 1989
      EXTERNAL FUNS
      REAL B,ST
      INTEGER IPR,IFN,NIN
      LOGICAL NOCOM
      NIN=5
      IPR=6
   1  READ(NIN,900)B,ST
 900  FORMAT(2F10.5)
      WRITE(IPR,964)B,ST
 964  FORMAT(' TEST A17LS STARTING POSN=',F15.5,'  INITIAL STEP=',F15.5)
      IFN=100
      IF(B.LT.-5.0)STOP
      IF(ST.EQ.0.0)STOP
C  REPLACE 0 WITH IPR IN NEXT LINE TO GET INTERMEDIATE OUTPUT
      CALL A17LS(B,ST,FUNS,IFN,NOCOM,0)
      IF(NOCOM)WRITE(IPR,966)
 966  FORMAT(' FAILURE??')
      WRITE(IPR,967)IFN,B,ST
 967  FORMAT(' CONVERGED IN',I4,' EVALS TO F(',1PE16.8,')=',E16.8)
      WRITE(IPR,968)
 968  FORMAT(' ')
      GOTO 1
      END
      REAL FUNCTION FUNS(X,NOCOM)
C  J.C. NASH   JULY 1978, APRIL 1989
      LOGICAL NOCOM
      REAL X
      NOCOM=.FALSE.
      IF(X.LT.-5.0.OR.X.GT.10.0)NOCOM=.TRUE.
C  DEFINE RANGE OF INTEREST
      IF(NOCOM)RETURN
      FUNS=X*(X*X-2.0)-5.0
      RETURN
      END
      SUBROUTINE A17LS(B,ST,FUNS,IFN,NOCOM,IPR)
C  ALGORITHM 17 SUCCESS-FAILURE LINEAR SEARCH WITH PARABOLIC
C    INVERSE INTERPOLATION
C  J.C. NASH   JULY 1978, FEBRUARY 1980, APRIL 1989
C  B=INITIAL GUESS TO MINIMUM OF FUNCTION FUNS ALONG THE REAL LINE
C  ON OUTPUT B IS COMPUTED MINIMUM
C  ST=INITIAL STEP SIZE
C  ON OUTPUT ST CONTAINS COMPUTED MINIMUM FUNCTION VALUE
C  FUNS=NAME OF FUNCTION SUBPROGRAM
C    CALLING SEQUENCE IS      FVAL=FUNS(B,NOCOM)
C    NOCOM SET .TRUE. IF B NOT A VALID (OR DESIRABLE) ARGUMENT
C  NOCOM=LOGICAL FLAG SET .TRUE. IF INITIAL ARGUMENT INVALID
C    NORMAL RETURN FROM A17LS LEAVES NOCOM .FALSE.
C  IFN=LIMIT ON NO. OF FUNCTION EVALUATIONS (ON INPUT)
C     =NO. OF FUNCTION EVALUATIONS ACTUALLY USED (ON OUTPUT)
C  IPR=PRINTER CHANNEL IPR.GT.0 CAUSES INTERMEDIATE OUTPUT
C  STEP 0
      LOGICAL NOCOM
      INTEGER IFN,LIFN,IPR
      REAL FUNS,B,ST,A1,A2,P,S1,S0,X0,X2,BMIN,BIG,X1
C  FOR ALTERNATE TEST AT STEP 4
C     REAL EPS
C     EPS=16.0**(-5)
C  IBM VALUES
C&&&       BIG=R1MACH(2)
      BIG = 1.0E+35
      NOCOM=.FALSE.
      LIFN=IFN
      IFN=0
C  STEP CHANGE FACTORS
      A1=1.5
      A2=-0.25
C  CHECK STEPSIZE
      IF(ST.EQ.0.0)NOCOM=.TRUE.
      IF(NOCOM)RETURN
C  STEP 1
      IFN=IFN+1
      IF(IFN.GT.LIFN)GOTO 210
      P=-BIG
      P=FUNS(B,NOCOM)
      IF(IPR.GT.0)WRITE(IPR,965)IFN,B,P
 965  FORMAT(13H EVALUATION #,I4, 5H   F(,1PE16.8,2H)=,E16.8)
      IF(NOCOM)RETURN
C  STEP 2
  20  S1=P
      S0=-BIG
      X1=0.0
      BMIN=B
C  STEP 3
  30  X2=X1+ST
      B=BMIN+X2
C  STEP 4
      IF(B.EQ.BMIN+X1)GOTO 220
C  ALTERNATIVE STEP 4
C     IF(ABS(B)+EPS.EQ.ABS(BMIN)+ABS(X1)+EPS)GOTO 210
C  STEP 5
      IFN=IFN+1
      IF(IFN.GT.LIFN)GOTO 210
      NOCOM=.FALSE.
      P=FUNS(B,NOCOM)
      IF(NOCOM)GOTO 90
      IF(IPR.GT.0)WRITE(IPR,965)IFN,B,P
C  STEP 6
      IF(P.LT.S1)GOTO 100
C  STEP 7
      IF(S0.GE.S1)GOTO 110
C  STEP 8
      S0=P
      X0=X2
C  STEP 9
  90  ST=A2*ST
      GOTO 30
C  STEP 10
 100  X0=X1
      S0=S1
      X1=X2
      S1=P
      ST=A1*ST
      GOTO 30
C  STEP 11
 110  X0=X0-X1
      S0=(S0-S1)*ST
      P=(P-S1)*X0
C  STEP 12
      IF(P.EQ.S0)GOTO 180
C  STEP 13
      ST=0.5*(P*X0-S0*ST)/(P-S0)
C  STEP 14
      X2=X1+ST
      B=BMIN+X2
C  STEP 15
      IF(B.EQ.BMIN+X1)GOTO 180
C  FIXED TO JUMP TO STEP 18, NOT STEP 20 (APRIL 1989)
C  STEP 16
      IFN=IFN+1
      IF(IFN.GT.LIFN)GOTO 210
      NOCOM=.FALSE.
      P=FUNS(B,NOCOM)
      IF(NOCOM)GOTO 180
      IF(IPR.GT.0)WRITE(IPR,965)IFN,B,P
C  STEP 17
      IF(P.LT.S1)GOTO 190
C  STEP 18
 180  B=BMIN+X1
      P=S1
      GOTO 200
C  STEP 19
 190  X1=X2
C  STEP 20
 200  ST=A2*ST
      GOTO 20
 210  IFN=LIFN
 220  B=BMIN
      ST=S1
      RETURN
      END
