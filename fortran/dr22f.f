C&&& A22X
C  TEST ALG. 22  AUG 1978  J C NASH
C  J.C. NASH   JULY 1978, APRIL 1989
      INTEGER N,ND,NDC,I,J,LIMIT,NIN,NOUT,LIMIT2
      REAL B(4),STEP,VL,X(4),C(4),G(4),T(4),EPS
      LOGICAL NOCOM
      EXTERNAL WFUN,WDER
C  I/O CHANNELS
      NIN=5
      NOUT=6
      N=4
      ND=5
      NDC=6
   1  READ(NIN,901)STEP,LIMIT,LIMIT2
 901  FORMAT(F10.5,2I5)
      IF(STEP.EQ.0.0)STOP
      IF(LIMIT.LE.0)STOP
      WRITE(NOUT,951)STEP,LIMIT,LIMIT2
 951  FORMAT('0PROBLEM=WOOD4 STEPSIZE=',F15.10,'  LIMITS',2I5)
      READ(NIN,902)B
 902  FORMAT(4F10.5)
      WRITE(NOUT,953)
 953  FORMAT('0INITIAL POINT')
      WRITE(NOUT,952)B
 952  FORMAT(1H ,4F15.10)
C  IBM MACHINE PRECISION
      EPS=16.0**(-5)
      CALL A22CGM(N,B,WFUN,WDER,NOCOM,NOUT,LIMIT,LIMIT2,EPS,G,X,T,C,VL)
      WRITE(NOUT,954)VL,LIMIT,LIMIT2
 954  FORMAT('0CONV. TO',1PE16.8,' IN ',I5,' FN EVALS',I5,' DERIVS.')
      WRITE(NOUT,952)B
      GOTO 1
      END
      FUNCTION WFUN(N,B,NOCOM)
C  J.C. NASH   JULY 1978, APRIL 1989
      LOGICAL NOCOM
      INTEGER N
      REAL B(N),FV,D(4)
      IF(N.NE.4)STOP
      NOCOM=.FALSE.
      CALL WOOD4(FV,D,B,0,.FALSE.)
      WFUN=FV
      RETURN
      END
      SUBROUTINE WDER(N,B,G)
C  J.C. NASH   JULY 1978, APRIL 1989
      INTEGER N
      REAL B(N),G(4),FV
      IF(N.NE.4)STOP
      CALL WOOD4(FV,G,B,0,.TRUE.)
      RETURN
      END
      SUBROUTINE WOOD4(FVAL,D,X,I,MODE)
C  J.C. NASH   JULY 1978, APRIL 1989
C  WOOD'S 4 PARAMETER FUNCTION
C  FVAL  =  FUNCTION VALUE OR RESIDUAL VALUE AT POINT I
C   D    =  DERIVATIVES OF RESIDUAL I
C   X    =  POINT
C   I    =  OBSERVATION NO.  IF 0  THEN  COMPUTE SUM OF SQUARES OR GRAD
C  MODE  =  F  FN OR  RES, T  DERIVS. OR GRADIENT
      LOGICAL MODE
      INTEGER I
      REAL X(4),D(4)
C  HILLSTROM EXPRESSIONS
      IF(MODE) GOTO 500
      IF(I.GT.0)GOTO 250
C   SUM OF SQUARES TOTAL FN
      FVAL=100.0*(X(2)-X(1)**2)**2 + (1.0-X(1))**2
      FVAL=FVAL + 90.0*(X(4)-X(3)**2)**2
      FVAL=FVAL + (1.0-X(3))**2
      FVAL=FVAL + 10.1*((X(2)-1.0)**2 + (X(4)-1.0)**2)
      FVAL=FVAL + 19.8*(X(2)-1.0)*(X(4)-1.0)
      RETURN
C   RESIDUALS
 250  GOTO (310,320,330,340,350,360,370),I
 310  FVAL=10.0*(X(2)-X(1)**2)
      RETURN
 320  FVAL=1.0-X(1)
      RETURN
 330  FVAL=SQRT(90.0)*(X(4)-X(3)**2)
      RETURN
 340  FVAL=1.0-X(3)
      RETURN
 350  FVAL=SQRT(0.2)*(X(2)-1.0)
      RETURN
 360  FVAL=SQRT(0.2)*(X(4)-1.0)
      RETURN
 370  FVAL=SQRT(9.9)*(X(2)+X(4)-2.0)
      RETURN
C    DERIVATIVES
 500  IF(I.GT.0)GOTO 750
C   GRADIENT OF FN
      D(1)=-400.0*(X(2)-X(1)**2)*X(1) - 2.0*(1.0-X(1))
      D(2)= 200.0*(X(2)-X(1)**2) + 20.2*(X(2)-1.0) + 19.8*(X(4)-1.0)
      D(3)=-360.0*X(3)*(X(4)-X(3)**2) - 2.0*(1.0-X(3))
      D(4)= 180.0*(X(4)-X(3)**2) + 20.2*(X(4)-1.0) + 19.8*(X(2)-1.0)
      RETURN
C   RESIDUAL DERIVS AT OBSN I
 750  GOTO (810,820,830,840,850,860,870), I
 810  D(1)= -20.0*X(1)
      D(2)= 10.0
      D(3)=  0.0
      D(4)=  0.0
      RETURN
 820  D(1)= -1.0
      D(2)=  0.0
      D(3)=  0.0
      D(4)=  0.0
      RETURN
 830  D(1)=  0.0
      D(2)=  0.0
      D(3)= -2.0*SQRT(90.0)*X(3)
      D(4)=  SQRT(90.0)
      RETURN
 840  D(1)= 0.0
      D(2)=  0.0
      D(3)= -1.0
      D(4)=  0.0
      RETURN
 850  D(1)=  0.0
      D(2)= SQRT(0.2)
      D(3)=  0.0
      D(4)=  0.0
      RETURN
 860  D(1)=  0.0
      D(2)=  0.0
      D(3)=  0.0
      D(4)= SQRT(0.2)
      RETURN
 870  D(1)=  0.0
      D(2)= SQRT(9.9)
      D(3)=  0.0
      D(4)= SQRT(9.9)
      RETURN
      END
      SUBROUTINE A22CGM(N,B,FUN,DER,NOCOM,IPR,IFN,IG,EPS,G,X,T,C,P0)
C  ALGORITHM 22 CONJUGATE GRADIENTS FUNCTION MINIMISATION
C  J.C. NASH   JULY 1978, FEBRUARY 1980, APRIL 1989
C  MINIMISE FUNCTION  FUN(N,B,NOCOM) W.R.T. B(I),I=1,2,...,N
C  NOCOM IS A LOGICAL FLAG SET .TRUE. IF INITIAL POINT INFEASIBLE
C  B  IS INITIAL POINT & FINAL APPROXIMATE MINIMUM
C  FUN & DER ARE THE NAMES OF FUNCTION AND DERIVATIVE SUB-PROGRAMS
C     SEE  BELOW FOR CALLING SEQUENCES
C  IPR IS PRINT CHANNEL    IPR.GT.0  FOR PRINTING
C  IFN IS NUMBER OF FN EVALUATIONS USED (OUTPUT)
C      IS LIMIT ON EVALUATIONS (INPUT)
C  IG  IS NUMBER OF DERIVATIVE EVALUATIONS
C  EPS IS MACHINE PRECISION
C  G,X,T,C ARE WORKING VECTORS
C  STEP 0
      LOGICAL NOCOM, ACCPNT
      INTEGER N,IPR,IFN,LIM,IG,COUNT,ITN,I,IFNL
      REAL B(N),X(N),G(N),T(N),C(N),P1,P0,P,G1,G2,K,MSTEP,STEP,EPS,TOL
      REAL A1,A2,T2,GRPR,G3,LSTEP,RELTST,ACCTOL,STREDN,NUSTEP,SETSTP
      STREDN=0.2
      ACCTOL=0.0001
      RELTST=10.0
      SETSTP=1.7
      LIM=IFN
      IFN=0
      IG=0
      TOL=N*EPS*SQRT(EPS)
      LSTEP=1.0
C  STEP 1
      NOCOM=.FALSE.
      P0=FUN(N,B,NOCOM)
      IF(NOCOM)RETURN
      IFN=IFN+1
C  STEP 2
  20  DO 25 I=1,N
        C(I)=0.0
        T(I)=0.0
  25  CONTINUE
C  STEP 3
  30  DO 270 ITN=1,N
        IF(IPR.GT.0)WRITE(IPR,973)IFN,IG,P0
 973    FORMAT( 1H ,I4,11H FUNCTION &,I4,32H DERIVATIVE EVALUATIONS --
     * P0=,1PE16.8)
C  STEP 4
        CALL DER(N,B,G)
        IG=IG+1
C  STEP 5
        G1=0.0
        G2=0.0
        DO 55 I=1,N
          X(I)=B(I)
C****  POLAK RIBIERE FORMULAS
C****            G1=G1+G(I)*(G(I)-C(I))
C****            G2=G2+C(I)**2
C****  FLETCHER REEVES FORMULAS -- CURRENTLY ACTIVE
          G1=G1+G(I)*G(I)
          G2=G2+C(I)*C(I)
C****  BEALE SORENSON FORMULAS
C****          G1=G1+G(I)*(G(I)-C(I))
C****          G2=G2+T(I)*(G(I)-C(I))
          C(I)=G(I)
  55    CONTINUE
C  STEP 6
        IF(G1.GT.TOL)GOTO 70
C  CHECK NOT G2, ALSO SIGN
C
        IF(ITN.EQ.1)RETURN
C  STEP 7
        G3=1.0
  70    IF(G2.GT.0.0)G3=G1/G2
C        WRITE(IPR,8003)G1,G2,G3
C 8003   FORMAT(' G1,G2,G3 ',1P3E16.8)
C  STEP 8
        GRPR=0.0
        T2=0.0
        DO 85 I=1,N
          T(I)=T(I)*G3-G(I)
          T2=T2+T(I)**2
          GRPR=GRPR+T(I)*G(I)
  85    CONTINUE
C        WRITE(IPR,8001)T2,GRPR
C 8001   FORMAT(' AT 85 T2=',1PE16.8,'   GRPR=',E16.8)
C  STEP 9
        STEP=LSTEP
C****  STEP ALONG SEARCH DIRECTION -- STEP 10
        ACCPNT=.FALSE.
C   DON'T HAVE A GOOD POINT YET
        IFNL=IFN
C   RECORDS LAST FUNCTION COUNT
C  STEP 10
  90    COUNT=0
        DO 105 I=1,N
          B(I)=X(I)+STEP*T(I)
          IF(RELTST+B(I).EQ.RELTST+X(I))COUNT=COUNT+1
 105    CONTINUE
C  STEP 11
C        WRITE(IPR,8002)COUNT
C 8002   FORMAT(' AT 105 COUNT =',I4)
        IF(COUNT.LT.N)GOTO 120
        IF(IFN.GT.IFNL)GOTO 120
        STEP=10.0*STEP
C ??? NEED TO GET RID OF UNUSED VARIABLES
C      STEP IS TOO SMALL ON FIRST TRY
       GOTO 90
C  STEP 12
 120   P=FUN(N,B,NOCOM)
       IFN=IFN+1
       ACCPNT = (.NOT.NOCOM).AND.(P.LE.P0+GRPR*STEP*ACCTOL)
       IF (ACCPNT) GOTO 160
       STEP=STREDN*STEP
       WRITE(IPR,974)
  974  FORMAT(1H+,'*')
       GOTO 90
  160  NUSTEP=2.0*((P-P0)-GRPR*STEP)
       IF(NUSTEP.LE.0.0) GOTO 195
       NUSTEP=-GRPR*STEP*STEP/NUSTEP
       DO 170 I=1,N
          B(I)=X(I)+NUSTEP*T(I)
  170  CONTINUE
       P0=P
       NOCOM=.FALSE.
       P=FUN(N,B,NOCOM)
       IFN=IFN+1
C  ??? CHECK NOCOMP ???
       IF(P.GE.P0)GOTO 180
       P0=P
       WRITE(IPR,975)
C  975  FORMAT(1H+,' I< ')
  975  FORMAT(' INTERPOLATION SUCCEEDED')
       GOTO 195
  180  DO 190 I=1,N
         B(I)=X(I)+STEP*T(I)
C      RESETS THE PARAMETERS TO THEIR 'BEST' VALUES
  190  CONTINUE
       WRITE(IPR,976)
  976  FORMAT(' INTERPOLATION FAILED')
C  976  FORMAT(1H+,' I> ')
  195  LSTEP=SETSTP*STEP
       IF(LSTEP.GT.1.0)LSTEP=1.0
C  CAN PLACE A LIMIT ON FUNCTION EVALUATIONS HERE
C  modification 2021-2-12. Chance IFN to -IFN       
       IF(IFN.LT.LIM) GOTO 270
       IFN=-IFN
       RETURN
 270  CONTINUE
C END OF INNER CYCLE
      GOTO 20
      END

